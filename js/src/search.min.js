const ALL_STYLES=['brand','duotone','flag','linear','solid']
const FREE_STYLES=['brand','flag','linear']
const search=document.getElementById('search')
const search_value=document.getElementById('search-icons')
const filterStyles=document.getElementById('styles-filter')
const filterTypes=document.getElementById('types-filter')
const icons=document.getElementsByClassName('icon')
const categories=document.getElementsByClassName('category')
const styles=filterStyles.querySelectorAll('[data-icons-style]')
const types=filterTypes.querySelectorAll('[data-icons-type]')
const getQueryParams=(url)=>{let queryParams={}
let anchor=document.createElement('a')
anchor.href=url
let queryStrings=anchor.search.substring(1)
let params=queryStrings.split('&')
for(let i=0;i<params.length;i++){let pair=params[i].split('=')
queryParams[pair[0]]=decodeURIComponent(pair[1])}
return queryParams;}
const searchParams=(url)=>{console.log(url)
const paramsString=url.split('?')[1]
const params=new URLSearchParams(paramsString)
if(params.has('type')){const paramType=params.get('type')
types.forEach(type=>{if(paramType===type.dataset.iconsType){type.checked=true}else{type.checked=false}})}
if(params.has('style')){const paramStyle=params.get('style').split(',')
styles.forEach(style=>{if(paramStyle.includes(style.dataset.iconsStyle)){style.checked=true}else{style.checked=false}})}
toggleStyles()
toggleTypes()
toggleIcons()
updateIconsCounter()}
const activeStyles=()=>{const active=Array.from(styles).filter(style=>style.checked===true).map(style=>style.dataset.iconsStyle)
return active}
const activeType=()=>{const active=Array.from(types).filter(type=>type.checked===true).map(type=>type.dataset.iconsType)
return active}
const iconFilter=(icon)=>{const styles=activeStyles()
const type=activeType()
const name=icon.dataset.iconName
if(type.includes('free')&&icon.dataset.iconType!=='free'){return false}
if(!styles.includes(icon.dataset.iconStyle)){return false}
if(!name.includes(search_value.value)){return false}
return true}
const countVisibleIcons=(style=false)=>{if(style){return Array.from(icons).filter(icon=>icon.dataset.iconStyle===style).filter(icon=>window.getComputedStyle(icon).getPropertyValue('display')!='none').length}else{return Array.from(icons).filter(icon=>window.getComputedStyle(icon).getPropertyValue('display')!='none').length}}
const toggleCategories=()=>{Array.from(categories).forEach(category=>{const visible=Array.from(category.getElementsByClassName('icon')).filter(icon=>window.getComputedStyle(icon).getPropertyValue('display')!='none')
if(visible.length===0){category.style.display='none'}else{category.style.display='block'}})}
const toggleIcons=()=>{Array.from(icons).forEach(icon=>{iconFilter(icon)?icon.style.display='block':icon.style.display='none'})
toggleCategories()
updateIconsCounter()}
const toggleStyles=()=>{styles.forEach(input=>{input.checked===true?input.parentNode.classList.add('active'):input.parentNode.classList.remove('active')})}
const toggleTypes=()=>{types.forEach(input=>{input.checked===true?input.parentNode.classList.add('active'):input.parentNode.classList.remove('active')})}
const updateIconsCounter=()=>{count=countVisibleIcons()
search_value.placeholder=`Search ${count} Icons`
styles.forEach(input=>{const style=input.dataset.iconsStyle
input.parentNode.getElementsByClassName('counter')[0].innerHTML=countVisibleIcons(style)})}
styles.forEach(input=>{input.addEventListener('change',event=>{toggleStyles()
toggleIcons()})})
types.forEach(input=>{input.addEventListener('change',event=>{toggleTypes()
toggleIcons()})})
const delay=(callback,ms)=>{let timer=0
return function(){const context=this
const args=arguments
clearTimeout(timer)
timer=setTimeout(()=>{callback.apply(context,args)},ms||0)}}
let timeout=null;search_value.addEventListener('keyup',e=>{clearTimeout(timeout)
timeout=setTimeout(()=>{toggleIcons()},250)});searchParams(window.location.href)