const form=document.getElementById('form')
let supportActive
let supportLevel
const createAlert=(target,type,message)=>{Array.from(target.getElementsByClassName('alert')).forEach(element=>element.remove())
const alert=document.createElement('div')
alert.classList.add('alert',`alert-${type}`)
alert.innerHTML=message
target.appendChild(alert)}
const download=(product,name,version)=>{const xhr=new XMLHttpRequest()
xhr.open('POST','https://api.coreui.io/downloads/download.php',true)
xhr.setRequestHeader('Content-type','application/x-www-form-urlencoded');xhr.responseType='blob';xhr.onload=()=>{if(xhr.readyState===4&&xhr.status===200){let filename=""
const disposition=xhr.getResponseHeader('Content-Disposition')
if(disposition&&disposition.indexOf('attachment')!==-1){const filenameRegex=/filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/
const matches=filenameRegex.exec(disposition)
if(matches!=null&&matches[1])filename=matches[1].replace(/['"]/g,'')}
const type=xhr.getResponseHeader('Content-Type')
const blob=new Blob([xhr.response],{type:type})
if(typeof window.navigator.msSaveBlob!=='undefined'){window.navigator.msSaveBlob(blob,filename)}else{const URL=window.URL||window.webkitURL;const downloadUrl=URL.createObjectURL(blob);if(filename){const a=document.createElement('a')
if(typeof a.download==='undefined'){window.location=downloadUrl}else{a.href=downloadUrl
a.download=filename
document.body.appendChild(a)
a.click()}}else{window.location=downloadUrl}
setTimeout(function(){URL.revokeObjectURL(downloadUrl)},100)}}}
xhr.setRequestHeader('Content-type','application/x-www-form-urlencoded')
xhr.send(JSON.stringify({'product':product,'name':name,'version':version}))}
const checkLicense=(email,license)=>{if(license.length>1){const xhr=new XMLHttpRequest()
xhr.open('POST','https://api.coreui.io/downloads/get_list_of_files.php',true)
xhr.setRequestHeader('Content-type','application/json')
xhr.onreadystatechange=()=>{if(xhr.readyState===4&&xhr.status===200){const json=JSON.parse(xhr.responseText)
const last=json.Transactions.pop()
if(parseInt(last.PaymentProvider)===1||parseInt(last.PaymentProvider)===0){form.innerHTML=`Please use the following link to download your order - <a href="https://gumroad.com/purchases/${last.PurchaseID}/receipt">Download</a>`}else{const table=document.createElement('table')
table.classList.add('table')
const thead=document.createElement('thead')
const tbody=document.createElement('tbody')
Array.from(['File','Version','Modified','']).forEach(element=>{const th=document.createElement('th')
th.appendChild(document.createTextNode(element))
thead.appendChild(th)})
last.Download.forEach(element=>{const tr=document.createElement('tr')
const td=document.createElement('td')
td.colSpan=4
td.innerHTML=last.ProductName
td.classList.add('table-light','font-weight-bold')
tr.appendChild(td)
tbody.appendChild(tr)
element.Files.forEach(file=>{const tr=document.createElement('tr')
for(const[key,value]of Object.entries(file)){const td=document.createElement('td')
td.appendChild(document.createTextNode(value))
tr.appendChild(td)}
const button=document.createElement('button')
button.innerHTML='download'
button.classList.add('btn','btn-sm','btn-coreui','btn-download')
button.dataset.product=element.Folder
button.dataset.name=file.Name
button.dataset.version=file.Version
button.addEventListener('click',(event)=>{download(event.target.dataset.product,event.target.dataset.name,event.target.dataset.version)})
const td=document.createElement('td')
td.appendChild(button)
tr.appendChild(td)
tbody.appendChild(tr)})})
table.appendChild(thead)
table.appendChild(tbody)
form.innerHTML=""
form.parentNode.insertBefore(table,form)}}else{createAlert(form,'danger','The license number or email address is invalid.')}}
xhr.send(JSON.stringify({'email':email,'license':license}))}else{createAlert(form,'danger','The license number is invalid.')}}
form.onsubmit=event=>{event.preventDefault()
event.stopPropagation()
const target=event.currentTarget
const inputs=target.elements
if(target[0].checkValidity()===false){target.classList.add('was-validated')}else{const email=inputs['email'].value
const license=inputs['license'].value
checkLicense(email,license)}}